package 자료구조3장검색;

import java.util.Arrays;

//5번 실습 - 2장 실습 2-14를 수정하여 객체 배열의 정렬 구현
class PhyscData implements Comparable<PhyscData>{
	String name;
	int height;
	double vision;
	
	@Override
	public int compareTo(PhyscData o) {
		int result = name.compareTo(o.name);
		if(result != 0 ) return result;
				
		int resultHeight = height - o.height;
				
		return resultHeight;
	}
	
	public PhyscData(String name, int height, double vision) {
		this.name = name;
		this.height = height;
		this.vision = vision;
	}
	
	@Override
	public String toString() {
		return "name is " + this.name + " height is " +  this.height + " vision is " + this.vision;
	}
	
}

public class Test_실습3_6_1객체배열이진탐색 {

	public static void main(String[] args) {
		
		PhyscData[] data = {
				new PhyscData("홍길동", 162, 0.3),
				new PhyscData("홍동", 164, 1.3),
				new PhyscData("홍길", 152, 0.7),
				new PhyscData("김홍길동", 172, 0.3),
				new PhyscData("길동", 182, 0.6),
				new PhyscData("길동", 167, 0.2),
				new PhyscData("길동", 167, 0.5),
		};
		
		showData(data);
		sortData(data);
		showData(data);
		
		PhyscData key = new PhyscData("길동", 167, 0.2);
		int result = linearSearch(data, key);
		System.out.println("\nlinearSearch(): result = " + result);
		key = new PhyscData("길동", 167, 0.5);

		result = binarySearch(data, key);
		System.out.println("\nbinarySearch(): result = " + result);
		int idx = Arrays.binarySearch(data, key);
		System.out.println("\nArrays.binarySearch(): result = " + result);
	}
	
	static void sortData(PhyscData[] data) {
		Arrays.sort(data);
		System.out.println("\nSorting is finished!! \n");
	}
	
	static int linearSearch(PhyscData[] data, PhyscData key) {
		return 0;
	}
	
	static int binarySearch(PhyscData[] data, PhyscData key) {
		return 0;
	}
	
	static void showData(PhyscData[]arr) {
		for (PhyscData fruit: arr) {
			System.out.println(fruit+" ");
		}
	}


}
