package 자료구조3장검색;

//3장 - 1번 실습 과제 > 2번 실습: 스트링 객체의 정렬과 이진 탐색 > 3번 실습: 객체 정렬과 이진 탐색
//comparator 구현 실습

import java.util.Arrays;
import java.util.Random;

public class Test_실습3_4정수배열이진탐색 {
	
//	static void inputData(int[] data) {
//		Random rd = new Random();
//		for(int i =0; i < data.length ; i ++) {
//			data[i] = rd.nextInt(100) +1;
//		}
//		
//	}
	
	static void inputData(int[] data) {
		data[0] = 50;
		data[1] = 33;
		data[2] = 5;
		data[3] = 39;
		data[4] = 56;
		data[5] = 12;
		data[6] = 4;
		data[7] = 75;
		data[8] = 66;
		data[9] = 44;

		
	}
	
	static void showData(int[] data) {
		System.out.println("data is");
		for (int i =0; i < data.length; i++) {
			System.out.println(data[i]);
		}
	}
	
	static void sortData(int[] data) {
		for(int i =0; i < data.length; i ++) {
			for(int j = i + 1; j < data.length; j++) {
				swap(data,i,j);
			}
		}
		//Arrays.sort(data);
		System.out.println("\nSorting is finished!! \n");
	}
	
	static void swap(int[] data, int i, int j) {
		int tmp = data[i];
		data[i] = data[j];
		data[j] = tmp;
	}
	
	static int linearSearch(int[] data, int key) {
//		for() {
//		
//		}
		
		return key;
		
	}

	static int binarySearch(int[] a, int key) {
		int pl = 0;
		int pr = a.length - 1;
		do {
			int pc = (pl + pr) / 2;
			if (a[pc] == key) 
				return pc;
			else if(a[pc] < key)
				pl = pc + 1;
			else
				pr = pc - 1;
		}while(pl <= pr);
		
		return -1;
	
	}
	
	public static void main(String[] args) {
		int []data = new int[10];
		
		inputData(data);
		showData(data);
		
		//Arrays.sort(data);
		sortData(data);
		showData(data);
		System.out.println();
		
		for (int num: data) {
			System.out.print(num+" ");
		}
		
		int key = 33;
		int result = linearSearch(data, key);
		System.out.println("\nlinearSearch(): result = " + result);

		key = 39;
		result = binarySearch(data, key);
		System.out.println("\nbinarySearch(): result = " + result);
		
		int idx = Arrays.binarySearch(data, key);
		//Arrays.binarySearch(data,key);
		System.out.println("\nArrays.binarySearch(): result = " + idx);

	}

}
